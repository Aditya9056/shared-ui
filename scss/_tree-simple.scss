$tree--file-type: (
	default: 'page',
	pdf:     'page-pdf',
	zip:     'zip',
	image:   'photo-picture',
	img:     'photo-picture',
	png:     'photo-picture',
	jpg:     'photo-picture',
	jpeg:    'photo-picture',
);

@include body-class(true) {

	.sui-tree {

		&, ul, li {
			display: block;
			margin: 0;
			padding: 0;
			border: 0;
			list-style: none;
		}

		li[role="treeitem"] {
			display: block;

			> .sui-tree-node {
				display: flex;

				> span {
					display: block;
					flex: 0 1 auto;
				}

				> span[data-button="expander"] {
					width: 30px;
					height: 12px;
					cursor: pointer;
					display: block;
					color: palette(gray, light);
					text-align: center;

					@include icon(before, false, true) {
						width: 12px;
						height: 12px;
						display: block;
						margin: 0 auto;
						color: inherit;
						font-size: 12px;
						line-height: 12px;
						transition: 250ms linear; // Match with slideToggle() timing
					}
				}

				> span[role="checkbox"] {
					width: 16px;
					height: 16px;
					cursor: pointer;
					display: flex;
					align-items: center;
					justify-content: center;
					border: 1px solid palette(gray, lighter);
					border-radius: $border-radius;
					background-color: #FAFAFA;

					@include icon(before, element-checkbox, true) {
						opacity: 0;
						display: block;
						color: $blue;
						font-size: 16px;
					}
				}

				> span[aria-hidden] {
					width: 30px;
					height: 16px;
					pointer-events: none;
					display: block;
					margin: 1px 0;
					color: palette(silver, medium);
					text-align: center;

					@include icon(before, false, true) {
						display: block;
						color: inherit;
						font-size: 16px;
						line-height: 16px;
					}
				}

				> span[role="text"] {
					display: block;
					color: palette(gray, default);
					font-size: 13px;
					font-family: $font;
					font-weight: 500;
					letter-spacing: $font--letter-spacing;
				}
			}

			ul[role="group"] {
				display: none;
			}

			// STATUS: Selected
			&[aria-selected="true"] {

				> .sui-tree-node {

					> span[role="checkbox"] {
						border-color: $blue;

						&:before {
							opacity: 1;
						}
					}
				}

				// STATUS: Disabled
				&[aria-disabled="true"] {

					> .sui-tree-node {

						> span[role="checkbox"] {
							border-color: palette(silver, default);
							background-color: palette(silver, medium);

							&:before {
								color: palette(silver, default);
							}
						}
					}
				}
			}

			// STATUS: Disabled
			&[aria-disabled="true"] {

				> .sui-tree-node {

					&, * {
						pointer-events: none;
					}

					> span[role="checkbox"] {
						border-color: palette(silver, default);
						background-color: palette(silver, default);
					}

					> span[role="text"] {
						color: palette(silver, medium);
					}
				}
			}
		}

		// VARIATION: Icons
		li[role="treeitem"] {

			&[aria-expanded="true"] {

				> .sui-tree-node {

					> span[aria-hidden] {

						@each $type, $icon in $tree--file-type {

							@if 'default' != $type {

								&[data-type="#{$type}"] {
									@include icon(before, $icon, false);
								}
							}

							@else {
								@include icon(before, folder-open, false);
							}
						}
					}
				}
			}

			&[aria-expanded="false"] {

				> .sui-tree-node {

					> span[aria-hidden] {

						@each $type, $icon in $tree--file-type {

							@if 'default' != $type {

								&[data-type="#{$type}"] {
									@include icon(before, $icon, false);
								}
							}

							@else {
								@include icon(before, folder, false);
							}
						}
					}
				}
			}

			&:not([aria-expanded]) {

				> .sui-tree-node {

					> span[aria-hidden] {

						@each $type, $icon in $tree--file-type {

							@if 'default' == $type {
								@include icon(before, $icon, false);
							}

							@else {

								&[data-type="#{$type}"] {
									@include icon(before, $icon, false);
								}
							}
						}
					}
				}
			}
		}

		// TREE: Selector
		&[data-tree="selector"] {

			li[role="treeitem"] {
				margin: 0 0 10px;

				&:last-child {
					margin: 0;
				}

				> .sui-tree-node {

					> span[role="checkbox"] {
						margin: 3px 0;

						+ span {
							margin-left: 10px;
						}
					}

					> span[role="text"] {
						line-height: 22px;
					}

					> span[data-button="expander"] {
						margin: 5px 0;
						@include icon(before, chevron-down, false);
					}
				}

				ul[role="group"] {
					margin: 10px 0 0;
					padding-left: 26px;
				}

				// STATUS: Expanded
				&[aria-expanded="true"] {

					> .sui-tree-node {

						> span[data-button="expander"] {

							&:before {
								transform: rotate(180deg);
							}
						}
					}
				}
			}
		}

		// TREE: Directory Browser
		&[data-tree="directory"] {

			li[role="treeitem"] {
				margin: 0 0 5px;

				&:last-child {
					margin: 0;
				}

				> .sui-tree-node {
					padding: 10px 20px;
					border-radius: $border-radius;

					> span[data-button="expander"] {
						margin-top: 4px;
						margin-left: -10px;
						margin-bottom: 4px;

						@include icon(before, chevron-right, false);
					}

					> span[role="checkbox"] {
						margin: 2px 0;
					}

					> span[role="text"] {
						flex: 1;
						line-height: 20px;
					}
				}

				ul[role="group"] {
					margin: 5px 0 0;
					padding-left: 20px;
				}

				// STATUS: Expanded
				&[aria-expanded="true"] {

					> .sui-tree-node {
						background-color: palette(silver, light);

						> span[data-button="expander"] {

							&:before {
								transform: rotate(90deg);
							}
						}
					}
				}

				// STATUS: Selected
				&[aria-selected="true"] {

					> .sui-tree-node {
						background-color: palette(blue, light);

						> span[data-button="expander"] {

							&:before {
								color: $blue;
							}
						}

						> span[aria-hidden] {
							color: $blue;
						}

						> span[role="text"] {
							color: $blue;
						}
					}
				}

				// STATUS: Disabled
				&[aria-disabled="true"] {

					> .sui-tree-node {

						> span[data-button="expander"] {

							@include icon(before, lock, false) {
								color: palette(gray, lighter);
							}
						}

						> span[aria-hidden] {

							&:before {
								color: palette(gray, lighter);
							}
						}
					}
				}
			}
		}
	}
}