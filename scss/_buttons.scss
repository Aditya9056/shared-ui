@include body-class(true) {

	.sui-button,
	a.sui-button,
	button.sui-button {

		&, &-icon {
			cursor: pointer;
			display: inline-block;
			position: relative;
			margin: 0;
			border-width: 2px;
			border-style: solid;
			border-color: transparent;
			border-radius: $border-radius;
			text-decoration: none;
			text-align: center;
			transition: $transition;

			.sui-loading {
				width: 16px;
				height: 16px;
				display: none;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				position: absolute;
				margin: 0;
	
				&:before {
					display: block;
				}
			}
	
			.sui-loading-text {
				display: block;
				pointer-events: none;
			}

			[class*="sui-icon-"] {
				font-size: 12px;
	
				&:before {
					display: block;
					color: inherit;
				}
			}

			&,
			&:hover,
			&:focus,
			&:active {
				outline: none;
				box-shadow: none;
			}

			&.disabled,
			&:disabled,
			&[disabled],
			&.sui-button-onload {
				cursor: default;
				pointer-events: none;
			}

			&.sui-button-onload {
				pointer-events: none;
				display: inline-flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
	
				.sui-loading {
					display: flex;
				}
	
				.sui-loading-text {
					opacity: 0;
				}
			}

			&:not(:last-child) {
				margin-right: 10px;
			}
		}
	}

	// VARIATION: Buttons with text
	.sui-button,
	a.sui-button,
	button.sui-button {
		width: auto;
		min-width: 80px;
		height: 30px;
		padding: 5px 14px;
		background-color: map-get($button-background, default);
		color: map-get($button-text-color, default);
		font: 500 12px/16px $font;
		letter-spacing: $font--letter-spacing;
		text-transform: uppercase;
		white-space: nowrap;

		[class*="sui-icon-"] {
			vertical-align: middle;

			&:not(.sui-loading) {
				width: 22px;
				position: relative;
				top: -1px;
				margin-left: -7px;
			}
		}

		&:hover,
		&:active {
			background-color: darken(map-get($button-background, default), 10%);
		}

		&.disabled,
		&:disabled,
		&[disabled],
		&.sui-button-onload {
			background-color: map-get($button-disabled-background, default);
			color: map-get($button-disabled-color, default);
		}

		// VARIATION: Button with right icon
		&.sui-button-icon-right {

			[class*="sui-icon-"] {
				
				&:not(.sui-loading) {
					margin-right: -7px;
					margin-left: 0;
				}
			}
		}

		// VARIATION: Colorize buttons
		@each $color in $button-colors {

			&.sui-button-#{$color} {
				background-color: map-get($button-background, $color);
				color: map-get($button-text-color, $color);

				&:hover,
				&:active {
					background-color: darken(map-get($button-background, $color), 10%);
				}

				&.disabled,
				&:disabled,
				&[disabled],
				&.sui-button-onload {
					background-color: map-get($button-disabled-background, $color);
					color: map-get($button-disabled-color, $color);
				}
			}
		}

		// VARIATION: Upsell button
		&.sui-button-upsell {
			width: auto;
			height: 26px;
			padding: 4px 14px;
			border-color: $button-upsell--border-static;
			border-radius: 14px;
			background-color: transparent;
			color: $button-upsell--color-static;
			line-height: 14px;
			text-transform: none;

			&:hover,
			&:active {
				opacity: 1;
				border-color: $button-upsell--border-active;
				background-color: $button-upsell--border-active;
				color: $button-upsell--color-active;
			}
		}

		// VARIATION: Dashed button
		&.sui-button-dashed {
			width: 100%;
			display: flex;
			align-items: center;
			justify-content: center;
			border-width: 1px;
			border-style: dashed;
			border-color: $button-dashed--border;
			background-color: $button-dashed--background;
			color: $button-dashed--color;
			line-height: 18px;

			@include media(max-width, md) {
				height: $button-dashed-height-md;
			}

			@include media(min-width, md) {
				height: $button-dashed-height;
			}
		}

		// VARIATION: Ghost buttons
		&.sui-button-ghost {
			border-color: map-get($button-border, default);
			background-color: transparent;
			color: map-get($button-background, default);

			&:hover,
			&:active {
				border-color: map-get($button-background, default);
				background-color: map-get($button-background, default);
				color: map-get($button-text-color, default);
			}

			&.disabled,
			&:disabled,
			&[disabled],
			&.sui-button-onload {
				border-color: map-get($button-disabled-background, default);
				background-color: map-get($button-disabled-background, default);
				color: map-get($button-disabled-color, default);
			}

			@each $color in $button-colors {

				&.sui-button-#{$color} {
					border-color: map-get($button-border, $color);
					color: map-get($button-background, $color);

					&:hover,
					&:active {
						border-color: map-get($button-background, $color);
						background-color: map-get($button-background, $color);
						color: map-get($button-text-color, $color);
					}

					&.disabled,
					&:disabled,
					&[disabled],
					&.sui-button-onload {
						border-color: map-get($button-disabled-background, $color);
						background-color: map-get($button-disabled-background, $color);
						color: map-get($button-disabled-color, $color);
					}
				}
			}
		}
	}

	// VARIATION: Buttons with icons (only)
	// This variation it's not related and must not be used with .sui-button class
	.sui-button-icon,
	a.sui-button-icon,
	button.sui-button-icon {
		padding: 0 4px;
		border: 1px solid transparent;
		background-color: transparent;
	}
}

/*
@include body-class(true) {
	
	.sui-button,
	a.sui-button,
	button.sui-button {

		&.sui-button-lg {
			height: 40px;
			padding: 11px 20px 9px;
			font: 500 15px/20px $font;

			&.sui-button-ghost {
				padding: 9px 20px 9px;
			}

			[class*="sui-icon-"] {
				font-size: 16px;

				&:not(.sui-fw):not(.sui-loading) {
					margin-right: 10px;
				}
			}

			&.sui-button-icon-right {

				[class*="sui-icon-"] {

					&:not(.sui-fw):not(.sui-loading) {
						margin-right: 0;
						margin-left: 10px;
					}
				}
			}
		}
	}

	// To be used without .sui-button class
	.sui-button-icon:not(.sui-button),
	a.sui-button-icon:not(.sui-button),
	button.sui-button-icon:not(.sui-button) {
		border-radius: $border-radius;
		background-color: transparent;
		color: palette(gray, light);
		font-size: 12px;
		transition: 0.3s ease;

		[class*="sui-icon-"] {
			width: 20px;
			height: 28px;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;

			&:before {
				display: block;
				color: inherit;
			}
		}

		&,
		&:hover,
		&:active {
			outline: none;
			box-shadow: none;
		}

		&:hover,
		&:active {
			background-color: $silver;
			color: palette( gray, dark );
		}

		&.sui-button-red {
			color: $red;

			&:hover,
			&:active {
				background-color: palette(red, light);
			}
		}

		&.sui-button-outlined {
			padding: 0 11px;
			border-color: palette(gray, lighter);

			&:hover, &:active {
				border-color: $silver;
			}

			&.sui-active {
				border-color: palette(gray, light);
				background-color: palette(gray, light);

				[class*="sui-icon-"]:before {
					color: $white;
				}
			}
		}
	}
}
*/